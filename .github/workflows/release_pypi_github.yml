name: "Release to PyPI and GitHub"

on:
  push:
    tags:
      - "v*"

jobs:
  details:
    runs-on: ubuntu-latest
    outputs:
      package_name: ${{ steps.package_information.outputs.package_name }}
      new_version: ${{ steps.release.outputs.new_version }}
      suffix: ${{ steps.release.outputs.suffix }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Extract tag and Details
        id: release
        run: |
          if [ "${{ github.ref_type }}" = "tag" ]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
            NEW_VERSION=$(echo $TAG_NAME | awk -F'-' '{print $1}')
            SUFFIX=$(echo $TAG_NAME | awk -F'-' '{print $2}')
            echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
            echo "suffix=$SUFFIX" >> "$GITHUB_OUTPUT"
            echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"
            echo "Version is $NEW_VERSION"
            echo "Suffix is $SUFFIX"
            echo "Tag name is $TAG_NAME"
          else
            echo "No tag found"
            exit 1
          fi

      - name: Install uv
        uses: astral-sh/setup-uv@22695119d769bdb6f7032ad67b9bca0ef8c4a174 # v5.4
        with:
          version: "0.6.9"

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5
        with:
          python-version-file: "pyproject.toml"

      - name: Get Name of Package
        id: package_information
        run: |
          PACKAGE_NAME=$(uvx --from=toml-cli toml get --toml-path=pyproject.toml project.name)
          echo "Package name: $PACKAGE_NAME"
          echo "package_name=$PACKAGE_NAME" >> "$GITHUB_OUTPUT"

  setup_and_build:
    needs: details
    name: Setup and build distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false

      - name: Install uv
        uses: astral-sh/setup-uv@22695119d769bdb6f7032ad67b9bca0ef8c4a174 # v5.4
        with:
          version: "0.6.9"

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync --no-dev

      - name: Build source and wheel distribution
        run: uv build

      - name: Upload artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: python-package-distributions
          path: dist/

  pypi_publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    needs: [setup_and_build, details]
    environment:
      name: release
    permissions:
      # For PyPI's trusted publishing
      id-token: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4


  github_release:
    name: Create GitHub Release
    needs: [setup_and_build, details, pypi_publish]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          name: python-package-distributions
          path: ./dist/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ needs.details.outputs.new_version }}
          release_name: ${{ needs.details.outputs.tag_name }}
          body: "Release of version ${{ needs.details.outputs.new_version }}"
